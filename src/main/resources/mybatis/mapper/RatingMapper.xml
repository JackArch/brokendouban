<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bingo.repository.RatingRepository">
    <resultMap id="BaseResultMap" type="com.bingo.domain.Rating" >
        <constructor >
            <idArg column="rating_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="movie_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="rating" jdbcType="DOUBLE" javaType="java.lang.Double" />
            <arg column="comment" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="movie_name" jdbcType="VARCHAR" javaType="java.lang.String" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List" >
        rating_id, user_id, movie_id, rating, comment,create_time, username, movie_name
    </sql>

    <insert id="insert" parameterType="com.bingo.domain.Rating" >
        insert into rating (rating_id, user_id, movie_id, rating, comment, create_time)
        values (#{rating_id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER},#{movie_id,jdbcType=INTEGER},#{rating,jdbcType=DOUBLE},
        #{comment,jdbcType=VARCHAR},now())
    </insert>

    <select id="selectUserRatingList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        rating.rating_id, rating.user_id, rating.movie_id, rating.rating, rating.`comment`,rating.create_time, user.username, movie.movie_name
        from rating LEFT JOIN movie on rating.movie_id = movie.movie_id LEFT JOIN user on user.id = rating.user_id
        where user_id = #{user_id,jdbcType=INTEGER} and `comment`!=""

    </select>

    <select id="checkUserRating" resultType="int" parameterType="map">
        SELECT count(1) from rating
        where movie_id = #{movie_id,jdbcType=INTEGER} and user_id = #{user_id,jdbcType=INTEGER}
    </select>

    <select id="selectRatingByUserIdMovieId" resultMap="BaseResultMap" parameterType="map" >
        SELECT rating.rating_id, rating.user_id, rating.movie_id, rating.rating, rating.`comment`,rating.create_time, user.username, movie.movie_name
        from rating LEFT JOIN movie on rating.movie_id = movie.movie_id LEFT JOIN user on user.id = rating.user_id
        where rating.movie_id = #{movie_id,jdbcType=INTEGER} and rating.user_id = #{user_id,jdbcType=INTEGER}
    </select>

    <select id="selectRatingList" resultMap="BaseResultMap">
        SELECT rating.rating_id, rating.user_id, rating.movie_id, rating.rating, rating.`comment`,rating.create_time, user.username, movie.movie_name
        from rating LEFT JOIN movie on rating.movie_id = movie.movie_id LEFT JOIN user on user.id = rating.user_id


    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from rating
        where rating_id = #{rating_id,jdbcType=INTEGER}
    </delete>

    <select id="selectMovieRatingList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT rating.rating_id, rating.user_id, rating.movie_id, rating.rating, rating.`comment`,rating.create_time, user.username, movie.movie_name
        from rating LEFT JOIN movie on rating.movie_id = movie.movie_id LEFT JOIN user on user.id = rating.user_id
        where rating.movie_id = #{movie_id,jdbcType=INTEGER} and `comment`!=""

    </select>

</mapper>