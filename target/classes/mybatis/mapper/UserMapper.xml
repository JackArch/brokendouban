<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bingo.repository.UserRepository" >
    <resultMap id="BaseResultMap" type="com.bingo.domain.User" >
        <constructor >
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
            <arg column="age" jdbcType="VARCHAR" javaType="java.lang.String" />
            <arg column="sex" jdbcType="INTEGER" javaType="java.lang.Integer" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List" >
        id, username, password, email, phone, question, answer, role, create_time, update_time, age, sex
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.bingo.domain.User" >
        insert into user (id, username, password,
        email, phone, question,
        answer, role, create_time,
        update_time, age, sex)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR},
        #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
        now(),#{age,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.bingo.domain.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="question != null" >
                question,
            </if>
            <if test="answer != null" >
                answer,
            </if>
            <if test="role != null" >
                role,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
            update_time,
            </if>
            <if test="age != null" >
                age,
            </if>
            <if test="sex != null" >
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null" >
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null" >
                #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                now(),
            </if>
            <if test="updateTime != null" >
                now(),
            </if>
            <if test="age != null" >
                age,
            </if>
            <if test="sex != null" >
                sex,
            </if>.
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bingo.domain.User" >
        update user
        <set >
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="question != null" >
                question = #{question,jdbcType=VARCHAR},
            </if>
            <if test="answer != null" >
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="role != null" >
                role = #{role,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = now(),
            </if>
            <if test="age != null" >
                age = #{age, jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex, jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bingo.domain.User" >
        update user
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        question = #{question,jdbcType=VARCHAR},
        answer = #{answer,jdbcType=VARCHAR},
        role = #{role,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = now(),
        age =#{age,jdbcType=VARCHAR},
        sex =#{sex,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="checkUsername" resultType="int" parameterType="string" >
        select count(1) from user
        where username = #{username}
    </select>

    <select id="checkEmail" resultType="int" parameterType="string" >
        select count(1) from user
        where email = #{email}
    </select>

    <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        from user
        where username = #{username}
        and password = #{password}
    </select>

    <select id="selectQuestionByUsername" resultType="string" parameterType="string">
        SELECT
        question
        from user
        where username = #{username}
    </select>

    <select id="checkAnswer" resultType="int" parameterType="map">
        SELECT count(1)
        from user
        where username=#{username}
        and question=#{question}
        and answer=#{answer}
    </select>

    <update id="updatePasswordByUsername" parameterType="map">
        update user
        SET password = #{passwordNew}, update_time = now()
        where username = #{username}
    </update>

    <select id="checkPassword" resultType="int" parameterType="map">
        SELECT
        count(1)
        from user
        where password = #{password}
        and id = #{userId}
    </select>

    <select id="checkEmailByUserId" resultType="int" parameterType="map">
        SELECT count(1) from user
        where email = #{email}
        and id != #{userId}
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from user
        ORDER BY id DESC
    </select>

    <select id="selectRecommend" resultType="com.bingo.domain.Movie" parameterType="int">

        select movie_id,movie_name,movie_director,movie_actor,movie_language,type_id,movie_district,movie_date,movie_keyword,pic_url,movie_imdbid,movie_time,movie_rating from
            movie,recommend
        where
            movie.movie_id =recommend.mid and recommend.uid=#{id,jdbcType=INTEGER}
    </select>

    <select id="selectRecommend2" resultType="com.bingo.domain.MovieRecommend" parameterType="int">

        select m1.movie_id,m1.movie_name,m1.movie_director,m1.movie_actor,m1.movie_language,m1.type_id,
        m1.movie_district,m1.movie_date,m1.movie_keyword,m1.pic_url,m1.movie_imdbid,m1.movie_time,m1.movie_rating,m2.movie_name as reason_name
        from
        itemcf2,movie as m1,movie as m2
        where
        m1.movie_id =itemcf2.mid and itemcf2.uid=#{id,jdbcType=INTEGER} and m2.movie_id=itemcf2.reasonid
        ORDER BY rating DESC
        Limit 5
    </select>

    <insert id="setUserComment" parameterType="map">
        INSERT INTO
        rating ( userId,movieId
        <if test="rating!= null" >
            ,rating
        </if>
        <if test="comment!= null" >
            ,comment
        </if>
        )
        VALUES(  #{user_id,jdbcType=INTEGER}  ,#{movie_id,jdbcType=INTEGER}
        <if test="rating!= null" >
            , #{rating,jdbcType=DOUBLE}
        </if>
        <if test="comment!= null" >
            , #{comment,jdbcType=VARCHAR}
        </if>
        )
    </insert>

    <update id="changeRecommend"  parameterType="int">
        UPDATE itemcf2
        SET rating=rating*0.9
        WHERE uid = #{userId}
    </update>


</mapper>